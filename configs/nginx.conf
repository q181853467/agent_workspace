worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # 日志格式，推荐使用JSON格式，便于后续处理
    log_format  main_json escape=json
      '{\"@timestamp\":\"$time_iso8601\",'
       '\"client_ip\":\"$remote_addr\",'
       '\"request_method\":\"$request_method\",'
       '\"request_uri\":\"$request_uri\",'
       '\"status\":$status,'
       '\"body_bytes_sent\":$body_bytes_sent,'
       '\"http_referer\":\"$http_referer\",'
       '\"http_user_agent\":\"$http_user_agent\",'
       '\"upstream_addr\":\"$upstream_addr\",'
       '\"upstream_status\":$upstream_status,'
       '\"request_time\":$request_time,'
       '\"upstream_response_time\":$upstream_response_time}';

    access_log  /var/log/nginx/access.log  main_json;
    error_log   /var/log/nginx/error.log;

    # 上游服务集群，这里指向API网关服务
    upstream api_gateway {
        # 通过Kubernetes Service FQDN访问，实现负载均衡
        server api-gateway.core-services.svc.cluster.local:80;
    }

    # WebSocket支持所需的配置
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name platform.yourcompany.com;

        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 对WebSocket接口的特殊处理
        location /api/v1/chat/stream {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_buffering off; # 关闭代理缓冲，对流式响应至关重要
            proxy_read_timeout 86400s; # 长超时时间
        }
    }
}
